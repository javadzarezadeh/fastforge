services:
  db:
    image: postgres:18-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-fastforge}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-fastforge}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fastforge-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-fastforge}}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./migrations:/app/migrations
    networks:
      - fastforge-network
  adminer:
    image: adminer:5
    restart: on-failure:5
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DESIGN=pepa-linha
    mem_limit: 128m
    cpu_shares: 256
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fastforge-network
  redis:
    image: redis:8-alpine
    env_file:
      - .env
    ports:
      - "6379:6379"
    networks:
      - fastforge-network
volumes:
  postgres_data:
networks:
  fastforge-network:
    driver: bridge
